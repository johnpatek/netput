// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netput.proto

#include "netput.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace netput {
namespace internal {

inline constexpr WindowEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : timestamp_{::uint64_t{0u}},
        windowid_{0u},
        type_{static_cast< ::netput::internal::WindowEventType >(0)},
        arg1_{0},
        arg2_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WindowEvent::WindowEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WindowEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WindowEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WindowEventDefaultTypeInternal() {}
  union {
    WindowEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WindowEventDefaultTypeInternal _WindowEvent_default_instance_;

inline constexpr MouseWheelEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : timestamp_{::uint64_t{0u}},
        windowid_{0u},
        x_{0},
        y_{0},
        precisex_{0},
        precicey_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MouseWheelEvent::MouseWheelEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MouseWheelEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MouseWheelEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MouseWheelEventDefaultTypeInternal() {}
  union {
    MouseWheelEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MouseWheelEventDefaultTypeInternal _MouseWheelEvent_default_instance_;

inline constexpr MouseButtonStateMask::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : left_{static_cast< ::netput::internal::MouseState >(0)},
        middle_{static_cast< ::netput::internal::MouseState >(0)},
        right_{static_cast< ::netput::internal::MouseState >(0)},
        x1_{static_cast< ::netput::internal::MouseState >(0)},
        x2_{static_cast< ::netput::internal::MouseState >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MouseButtonStateMask::MouseButtonStateMask(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MouseButtonStateMaskDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MouseButtonStateMaskDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MouseButtonStateMaskDefaultTypeInternal() {}
  union {
    MouseButtonStateMask _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MouseButtonStateMaskDefaultTypeInternal _MouseButtonStateMask_default_instance_;

inline constexpr MouseButtonEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : timestamp_{::uint64_t{0u}},
        windowid_{0u},
        button_{static_cast< ::netput::internal::MouseButton >(0)},
        state_{static_cast< ::netput::internal::MouseState >(0)},
        doubleclick_{false},
        x_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MouseButtonEvent::MouseButtonEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MouseButtonEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MouseButtonEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MouseButtonEventDefaultTypeInternal() {}
  union {
    MouseButtonEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MouseButtonEventDefaultTypeInternal _MouseButtonEvent_default_instance_;

inline constexpr KeyboardEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : timestamp_{::uint64_t{0u}},
        windowid_{0u},
        state_{static_cast< ::netput::internal::KeyState >(0)},
        repeat_{false},
        keycode_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR KeyboardEvent::KeyboardEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct KeyboardEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyboardEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyboardEventDefaultTypeInternal() {}
  union {
    KeyboardEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyboardEventDefaultTypeInternal _KeyboardEvent_default_instance_;

inline constexpr EventResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventResponse::EventResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EventResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventResponseDefaultTypeInternal() {}
  union {
    EventResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventResponseDefaultTypeInternal _EventResponse_default_instance_;

inline constexpr DisconnectResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DisconnectResponse::DisconnectResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DisconnectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisconnectResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisconnectResponseDefaultTypeInternal() {}
  union {
    DisconnectResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisconnectResponseDefaultTypeInternal _DisconnectResponse_default_instance_;

inline constexpr DisconnectRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sessionid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DisconnectRequest::DisconnectRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DisconnectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisconnectRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisconnectRequestDefaultTypeInternal() {}
  union {
    DisconnectRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisconnectRequestDefaultTypeInternal _DisconnectRequest_default_instance_;

inline constexpr ConnectResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sessionid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConnectResponse::ConnectResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ConnectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectResponseDefaultTypeInternal() {}
  union {
    ConnectResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectResponseDefaultTypeInternal _ConnectResponse_default_instance_;

inline constexpr ConnectRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : userdata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConnectRequest::ConnectRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ConnectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectRequestDefaultTypeInternal() {}
  union {
    ConnectRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectRequestDefaultTypeInternal _ConnectRequest_default_instance_;

inline constexpr MouseMotionEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        statemask_{nullptr},
        timestamp_{::uint64_t{0u}},
        windowid_{0u},
        x_{0},
        y_{0},
        relativex_{0},
        relativey_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MouseMotionEvent::MouseMotionEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MouseMotionEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MouseMotionEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MouseMotionEventDefaultTypeInternal() {}
  union {
    MouseMotionEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MouseMotionEventDefaultTypeInternal _MouseMotionEvent_default_instance_;

inline constexpr EventRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sessionid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::netput::internal::EventType >(0)},
        Event_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR EventRequest::EventRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EventRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventRequestDefaultTypeInternal() {}
  union {
    EventRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventRequestDefaultTypeInternal _EventRequest_default_instance_;
}  // namespace internal
}  // namespace netput
static ::_pb::Metadata file_level_metadata_netput_2eproto[12];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_netput_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_netput_2eproto = nullptr;
const ::uint32_t TableStruct_netput_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::netput::internal::ConnectRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::netput::internal::ConnectRequest, _impl_.userdata_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::netput::internal::ConnectResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::netput::internal::ConnectResponse, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::ConnectResponse, _impl_.sessionid_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::ConnectResponse, _impl_.error_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::netput::internal::DisconnectRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::netput::internal::DisconnectRequest, _impl_.sessionid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::netput::internal::DisconnectResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::netput::internal::DisconnectResponse, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::DisconnectResponse, _impl_.error_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseButtonStateMask, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseButtonStateMask, _impl_.left_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseButtonStateMask, _impl_.middle_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseButtonStateMask, _impl_.right_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseButtonStateMask, _impl_.x1_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseButtonStateMask, _impl_.x2_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseMotionEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseMotionEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseMotionEvent, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseMotionEvent, _impl_.windowid_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseMotionEvent, _impl_.statemask_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseMotionEvent, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseMotionEvent, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseMotionEvent, _impl_.relativex_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseMotionEvent, _impl_.relativey_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseButtonEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseButtonEvent, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseButtonEvent, _impl_.windowid_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseButtonEvent, _impl_.button_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseButtonEvent, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseButtonEvent, _impl_.doubleclick_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseButtonEvent, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseButtonEvent, _impl_.y_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseWheelEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseWheelEvent, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseWheelEvent, _impl_.windowid_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseWheelEvent, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseWheelEvent, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseWheelEvent, _impl_.precisex_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::MouseWheelEvent, _impl_.precicey_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::netput::internal::KeyboardEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::netput::internal::KeyboardEvent, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::KeyboardEvent, _impl_.windowid_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::KeyboardEvent, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::KeyboardEvent, _impl_.repeat_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::KeyboardEvent, _impl_.keycode_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::netput::internal::WindowEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::netput::internal::WindowEvent, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::WindowEvent, _impl_.windowid_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::WindowEvent, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::WindowEvent, _impl_.arg1_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::WindowEvent, _impl_.arg2_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::netput::internal::EventRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::netput::internal::EventRequest, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::netput::internal::EventRequest, _impl_.sessionid_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::EventRequest, _impl_.type_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::netput::internal::EventRequest, _impl_.Event_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::netput::internal::EventResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::netput::internal::EventResponse, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::netput::internal::EventResponse, _impl_.error_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::netput::internal::ConnectRequest)},
        {9, -1, -1, sizeof(::netput::internal::ConnectResponse)},
        {20, -1, -1, sizeof(::netput::internal::DisconnectRequest)},
        {29, -1, -1, sizeof(::netput::internal::DisconnectResponse)},
        {39, -1, -1, sizeof(::netput::internal::MouseButtonStateMask)},
        {52, 67, -1, sizeof(::netput::internal::MouseMotionEvent)},
        {74, -1, -1, sizeof(::netput::internal::MouseButtonEvent)},
        {89, -1, -1, sizeof(::netput::internal::MouseWheelEvent)},
        {103, -1, -1, sizeof(::netput::internal::KeyboardEvent)},
        {116, -1, -1, sizeof(::netput::internal::WindowEvent)},
        {129, -1, -1, sizeof(::netput::internal::EventRequest)},
        {145, -1, -1, sizeof(::netput::internal::EventResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::netput::internal::_ConnectRequest_default_instance_._instance,
    &::netput::internal::_ConnectResponse_default_instance_._instance,
    &::netput::internal::_DisconnectRequest_default_instance_._instance,
    &::netput::internal::_DisconnectResponse_default_instance_._instance,
    &::netput::internal::_MouseButtonStateMask_default_instance_._instance,
    &::netput::internal::_MouseMotionEvent_default_instance_._instance,
    &::netput::internal::_MouseButtonEvent_default_instance_._instance,
    &::netput::internal::_MouseWheelEvent_default_instance_._instance,
    &::netput::internal::_KeyboardEvent_default_instance_._instance,
    &::netput::internal::_WindowEvent_default_instance_._instance,
    &::netput::internal::_EventRequest_default_instance_._instance,
    &::netput::internal::_EventResponse_default_instance_._instance,
};
const char descriptor_table_protodef_netput_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014netput.proto\022\017netput.internal\"\"\n\016Conne"
    "ctRequest\022\020\n\010UserData\030\001 \001(\014\"D\n\017ConnectRe"
    "sponse\022\017\n\007success\030\001 \001(\010\022\021\n\tSessionID\030\002 \001"
    "(\t\022\r\n\005Error\030\003 \001(\t\"&\n\021DisconnectRequest\022\021"
    "\n\tSessionID\030\001 \001(\t\"4\n\022DisconnectResponse\022"
    "\017\n\007Success\030\001 \001(\010\022\r\n\005Error\030\002 \001(\t\"\354\001\n\024Mous"
    "eButtonStateMask\022)\n\004Left\030\001 \001(\0162\033.netput."
    "internal.MouseState\022+\n\006Middle\030\002 \001(\0162\033.ne"
    "tput.internal.MouseState\022*\n\005Right\030\003 \001(\0162"
    "\033.netput.internal.MouseState\022\'\n\002X1\030\004 \001(\016"
    "2\033.netput.internal.MouseState\022\'\n\002X2\030\005 \001("
    "\0162\033.netput.internal.MouseState\"\255\001\n\020Mouse"
    "MotionEvent\022\021\n\tTimestamp\030\001 \001(\004\022\020\n\010Window"
    "ID\030\002 \001(\r\0228\n\tStateMask\030\003 \001(\0132%.netput.int"
    "ernal.MouseButtonStateMask\022\t\n\001X\030\004 \001(\021\022\t\n"
    "\001Y\030\005 \001(\021\022\021\n\tRelativeX\030\006 \001(\021\022\021\n\tRelativeY"
    "\030\007 \001(\021\"\274\001\n\020MouseButtonEvent\022\021\n\tTimestamp"
    "\030\001 \001(\004\022\020\n\010WindowID\030\002 \001(\r\022,\n\006Button\030\003 \001(\016"
    "2\034.netput.internal.MouseButton\022*\n\005State\030"
    "\004 \001(\0162\033.netput.internal.MouseState\022\023\n\013Do"
    "ubleClick\030\005 \001(\010\022\t\n\001X\030\006 \001(\021\022\t\n\001Y\030\007 \001(\021\"p\n"
    "\017MouseWheelEvent\022\021\n\tTimestamp\030\001 \001(\004\022\020\n\010W"
    "indowID\030\002 \001(\r\022\t\n\001X\030\003 \001(\021\022\t\n\001Y\030\004 \001(\021\022\020\n\010P"
    "reciseX\030\005 \001(\002\022\020\n\010PreciceY\030\006 \001(\002\"\177\n\rKeybo"
    "ardEvent\022\021\n\tTimestamp\030\001 \001(\004\022\020\n\010WindowID\030"
    "\002 \001(\r\022(\n\005State\030\003 \001(\0162\031.netput.internal.K"
    "eyState\022\016\n\006Repeat\030\004 \001(\010\022\017\n\007KeyCode\030\005 \001(\r"
    "\"~\n\013WindowEvent\022\021\n\tTimestamp\030\001 \001(\004\022\020\n\010Wi"
    "ndowID\030\002 \001(\r\022.\n\004Type\030\003 \001(\0162 .netput.inte"
    "rnal.WindowEventType\022\014\n\004Arg1\030\004 \001(\021\022\014\n\004Ar"
    "g2\030\005 \001(\021\"\344\002\n\014EventRequest\022\021\n\tSessionID\030\001"
    " \001(\t\022(\n\004Type\030\002 \001(\0162\032.netput.internal.Eve"
    "ntType\0228\n\013MouseMotion\030\003 \001(\0132!.netput.int"
    "ernal.MouseMotionEventH\000\0228\n\013MouseButton\030"
    "\004 \001(\0132!.netput.internal.MouseButtonEvent"
    "H\000\0226\n\nMouseWheel\030\005 \001(\0132 .netput.internal"
    ".MouseWheelEventH\000\0222\n\010Keyboard\030\006 \001(\0132\036.n"
    "etput.internal.KeyboardEventH\000\022.\n\006Window"
    "\030\007 \001(\0132\034.netput.internal.WindowEventH\000B\007"
    "\n\005Event\"/\n\rEventResponse\022\017\n\007Success\030\001 \001("
    "\010\022\r\n\005Error\030\002 \001(\t*k\n\tEventType\022\023\n\017MouseMo"
    "tionType\020\000\022\023\n\017MouseButtonType\020\001\022\022\n\016Mouse"
    "WheelType\020\002\022\020\n\014KeyboardType\020\003\022\016\n\nWindowT"
    "ype\020\004*\034\n\010KeyState\022\006\n\002Up\020\000\022\010\n\004Down\020\001*>\n\013M"
    "ouseButton\022\010\n\004Left\020\000\022\n\n\006Middle\020\001\022\t\n\005Righ"
    "t\020\002\022\006\n\002X1\020\003\022\006\n\002X2\020\004*$\n\nMouseState\022\t\n\005Pre"
    "ss\020\000\022\013\n\007Release\020\001*\351\001\n\017WindowEventType\022\r\n"
    "\tShownType\020\000\022\016\n\nHiddenType\020\001\022\017\n\013ExposedT"
    "ype\020\002\022\r\n\tMovedType\020\003\022\017\n\013ResizedType\020\004\022\021\n"
    "\rMinimizedType\020\005\022\021\n\rMaximizedType\020\006\022\020\n\014R"
    "estoredType\020\007\022\022\n\016MouseEnterType\020\010\022\022\n\016Mou"
    "seLeaveType\020\t\022\023\n\017FocusGainedType\020\n\022\021\n\rFo"
    "cusLostType\020\0132\374\001\n\006Netput\022N\n\007Connect\022\037.ne"
    "tput.internal.ConnectRequest\032 .netput.in"
    "ternal.ConnectResponse\"\000\022X\n\nDisconnect\022#"
    ".netput.internal.DisconnectResponse\032#.ne"
    "tput.internal.DisconnectResponse\"\000\022H\n\005Ev"
    "ent\022\035.netput.internal.EventRequest\032\036.net"
    "put.internal.EventResponse\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_netput_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_netput_2eproto = {
    false,
    false,
    2356,
    descriptor_table_protodef_netput_2eproto,
    "netput.proto",
    &descriptor_table_netput_2eproto_once,
    nullptr,
    0,
    12,
    schemas,
    file_default_instances,
    TableStruct_netput_2eproto::offsets,
    file_level_metadata_netput_2eproto,
    file_level_enum_descriptors_netput_2eproto,
    file_level_service_descriptors_netput_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_netput_2eproto_getter() {
  return &descriptor_table_netput_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_netput_2eproto(&descriptor_table_netput_2eproto);
namespace netput {
namespace internal {
const ::google::protobuf::EnumDescriptor* EventType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netput_2eproto);
  return file_level_enum_descriptors_netput_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t EventType_internal_data_[] = {
    327680u, 0u, };
bool EventType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* KeyState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netput_2eproto);
  return file_level_enum_descriptors_netput_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t KeyState_internal_data_[] = {
    131072u, 0u, };
bool KeyState_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* MouseButton_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netput_2eproto);
  return file_level_enum_descriptors_netput_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t MouseButton_internal_data_[] = {
    327680u, 0u, };
bool MouseButton_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* MouseState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netput_2eproto);
  return file_level_enum_descriptors_netput_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t MouseState_internal_data_[] = {
    131072u, 0u, };
bool MouseState_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* WindowEventType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netput_2eproto);
  return file_level_enum_descriptors_netput_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t WindowEventType_internal_data_[] = {
    786432u, 0u, };
bool WindowEventType_IsValid(int value) {
  return 0 <= value && value <= 11;
}
// ===================================================================

class ConnectRequest::_Internal {
 public:
};

ConnectRequest::ConnectRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:netput.internal.ConnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE ConnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : userdata_(arena, from.userdata_),
        _cached_size_{0} {}

ConnectRequest::ConnectRequest(
    ::google::protobuf::Arena* arena,
    const ConnectRequest& from)
    : ::google::protobuf::Message(arena) {
  ConnectRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:netput.internal.ConnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE ConnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : userdata_(arena),
        _cached_size_{0} {}

inline void ConnectRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ConnectRequest::~ConnectRequest() {
  // @@protoc_insertion_point(destructor:netput.internal.ConnectRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ConnectRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.userdata_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ConnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:netput.internal.ConnectRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.userdata_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ConnectRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ConnectRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ConnectRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes UserData = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.userdata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes UserData = 1;
    {PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.userdata_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ConnectRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:netput.internal.ConnectRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes UserData = 1;
  if (!this->_internal_userdata().empty()) {
    const std::string& _s = this->_internal_userdata();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netput.internal.ConnectRequest)
  return target;
}

::size_t ConnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netput.internal.ConnectRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes UserData = 1;
  if (!this->_internal_userdata().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_userdata());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ConnectRequest::_class_data_ = {
    ConnectRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ConnectRequest::GetClassData() const {
  return &_class_data_;
}

void ConnectRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ConnectRequest*>(&to_msg);
  auto& from = static_cast<const ConnectRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:netput.internal.ConnectRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_userdata().empty()) {
    _this->_internal_set_userdata(from._internal_userdata());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConnectRequest::CopyFrom(const ConnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netput.internal.ConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ConnectRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ConnectRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ConnectRequest::InternalSwap(ConnectRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.userdata_, &other->_impl_.userdata_, arena);
}

::google::protobuf::Metadata ConnectRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netput_2eproto_getter, &descriptor_table_netput_2eproto_once,
      file_level_metadata_netput_2eproto[0]);
}
// ===================================================================

class ConnectResponse::_Internal {
 public:
};

ConnectResponse::ConnectResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:netput.internal.ConnectResponse)
}
inline PROTOBUF_NDEBUG_INLINE ConnectResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : sessionid_(arena, from.sessionid_),
        error_(arena, from.error_),
        _cached_size_{0} {}

ConnectResponse::ConnectResponse(
    ::google::protobuf::Arena* arena,
    const ConnectResponse& from)
    : ::google::protobuf::Message(arena) {
  ConnectResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:netput.internal.ConnectResponse)
}
inline PROTOBUF_NDEBUG_INLINE ConnectResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sessionid_(arena),
        error_(arena),
        _cached_size_{0} {}

inline void ConnectResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
ConnectResponse::~ConnectResponse() {
  // @@protoc_insertion_point(destructor:netput.internal.ConnectResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ConnectResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sessionid_.Destroy();
  _impl_.error_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ConnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:netput.internal.ConnectResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessionid_.ClearToEmpty();
  _impl_.error_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ConnectResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 54, 2> ConnectResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ConnectResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ConnectResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResponse, _impl_.success_)}},
    // string SessionID = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResponse, _impl_.sessionid_)}},
    // string Error = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResponse, _impl_.error_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(ConnectResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string SessionID = 2;
    {PROTOBUF_FIELD_OFFSET(ConnectResponse, _impl_.sessionid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string Error = 3;
    {PROTOBUF_FIELD_OFFSET(ConnectResponse, _impl_.error_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\0\11\5\0\0\0\0"
    "netput.internal.ConnectResponse"
    "SessionID"
    "Error"
  }},
};

::uint8_t* ConnectResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:netput.internal.ConnectResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  // string SessionID = 2;
  if (!this->_internal_sessionid().empty()) {
    const std::string& _s = this->_internal_sessionid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "netput.internal.ConnectResponse.SessionID");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string Error = 3;
  if (!this->_internal_error().empty()) {
    const std::string& _s = this->_internal_error();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "netput.internal.ConnectResponse.Error");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netput.internal.ConnectResponse)
  return target;
}

::size_t ConnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netput.internal.ConnectResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SessionID = 2;
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sessionid());
  }

  // string Error = 3;
  if (!this->_internal_error().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_error());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ConnectResponse::_class_data_ = {
    ConnectResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ConnectResponse::GetClassData() const {
  return &_class_data_;
}

void ConnectResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ConnectResponse*>(&to_msg);
  auto& from = static_cast<const ConnectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:netput.internal.ConnectResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sessionid().empty()) {
    _this->_internal_set_sessionid(from._internal_sessionid());
  }
  if (!from._internal_error().empty()) {
    _this->_internal_set_error(from._internal_error());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConnectResponse::CopyFrom(const ConnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netput.internal.ConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ConnectResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ConnectResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ConnectResponse::InternalSwap(ConnectResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sessionid_, &other->_impl_.sessionid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata ConnectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netput_2eproto_getter, &descriptor_table_netput_2eproto_once,
      file_level_metadata_netput_2eproto[1]);
}
// ===================================================================

class DisconnectRequest::_Internal {
 public:
};

DisconnectRequest::DisconnectRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:netput.internal.DisconnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE DisconnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : sessionid_(arena, from.sessionid_),
        _cached_size_{0} {}

DisconnectRequest::DisconnectRequest(
    ::google::protobuf::Arena* arena,
    const DisconnectRequest& from)
    : ::google::protobuf::Message(arena) {
  DisconnectRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:netput.internal.DisconnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE DisconnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sessionid_(arena),
        _cached_size_{0} {}

inline void DisconnectRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DisconnectRequest::~DisconnectRequest() {
  // @@protoc_insertion_point(destructor:netput.internal.DisconnectRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DisconnectRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sessionid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DisconnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:netput.internal.DisconnectRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessionid_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DisconnectRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 51, 2> DisconnectRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DisconnectRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string SessionID = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DisconnectRequest, _impl_.sessionid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string SessionID = 1;
    {PROTOBUF_FIELD_OFFSET(DisconnectRequest, _impl_.sessionid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\11\0\0\0\0\0\0"
    "netput.internal.DisconnectRequest"
    "SessionID"
  }},
};

::uint8_t* DisconnectRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:netput.internal.DisconnectRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string SessionID = 1;
  if (!this->_internal_sessionid().empty()) {
    const std::string& _s = this->_internal_sessionid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "netput.internal.DisconnectRequest.SessionID");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netput.internal.DisconnectRequest)
  return target;
}

::size_t DisconnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netput.internal.DisconnectRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SessionID = 1;
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sessionid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DisconnectRequest::_class_data_ = {
    DisconnectRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DisconnectRequest::GetClassData() const {
  return &_class_data_;
}

void DisconnectRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DisconnectRequest*>(&to_msg);
  auto& from = static_cast<const DisconnectRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:netput.internal.DisconnectRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sessionid().empty()) {
    _this->_internal_set_sessionid(from._internal_sessionid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DisconnectRequest::CopyFrom(const DisconnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netput.internal.DisconnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DisconnectRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DisconnectRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DisconnectRequest::InternalSwap(DisconnectRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sessionid_, &other->_impl_.sessionid_, arena);
}

::google::protobuf::Metadata DisconnectRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netput_2eproto_getter, &descriptor_table_netput_2eproto_once,
      file_level_metadata_netput_2eproto[2]);
}
// ===================================================================

class DisconnectResponse::_Internal {
 public:
};

DisconnectResponse::DisconnectResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:netput.internal.DisconnectResponse)
}
inline PROTOBUF_NDEBUG_INLINE DisconnectResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : error_(arena, from.error_),
        _cached_size_{0} {}

DisconnectResponse::DisconnectResponse(
    ::google::protobuf::Arena* arena,
    const DisconnectResponse& from)
    : ::google::protobuf::Message(arena) {
  DisconnectResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:netput.internal.DisconnectResponse)
}
inline PROTOBUF_NDEBUG_INLINE DisconnectResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_(arena),
        _cached_size_{0} {}

inline void DisconnectResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
DisconnectResponse::~DisconnectResponse() {
  // @@protoc_insertion_point(destructor:netput.internal.DisconnectResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DisconnectResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.error_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DisconnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:netput.internal.DisconnectResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DisconnectResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2> DisconnectResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DisconnectResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string Error = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DisconnectResponse, _impl_.error_)}},
    // bool Success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DisconnectResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DisconnectResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool Success = 1;
    {PROTOBUF_FIELD_OFFSET(DisconnectResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string Error = 2;
    {PROTOBUF_FIELD_OFFSET(DisconnectResponse, _impl_.error_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\0\5\0\0\0\0\0"
    "netput.internal.DisconnectResponse"
    "Error"
  }},
};

::uint8_t* DisconnectResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:netput.internal.DisconnectResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool Success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  // string Error = 2;
  if (!this->_internal_error().empty()) {
    const std::string& _s = this->_internal_error();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "netput.internal.DisconnectResponse.Error");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netput.internal.DisconnectResponse)
  return target;
}

::size_t DisconnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netput.internal.DisconnectResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Error = 2;
  if (!this->_internal_error().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_error());
  }

  // bool Success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DisconnectResponse::_class_data_ = {
    DisconnectResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DisconnectResponse::GetClassData() const {
  return &_class_data_;
}

void DisconnectResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DisconnectResponse*>(&to_msg);
  auto& from = static_cast<const DisconnectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:netput.internal.DisconnectResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error().empty()) {
    _this->_internal_set_error(from._internal_error());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DisconnectResponse::CopyFrom(const DisconnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netput.internal.DisconnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DisconnectResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DisconnectResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DisconnectResponse::InternalSwap(DisconnectResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata DisconnectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netput_2eproto_getter, &descriptor_table_netput_2eproto_once,
      file_level_metadata_netput_2eproto[3]);
}
// ===================================================================

class MouseButtonStateMask::_Internal {
 public:
};

MouseButtonStateMask::MouseButtonStateMask(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:netput.internal.MouseButtonStateMask)
}
MouseButtonStateMask::MouseButtonStateMask(
    ::google::protobuf::Arena* arena, const MouseButtonStateMask& from)
    : MouseButtonStateMask(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MouseButtonStateMask::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MouseButtonStateMask::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, left_),
           0,
           offsetof(Impl_, x2_) -
               offsetof(Impl_, left_) +
               sizeof(Impl_::x2_));
}
MouseButtonStateMask::~MouseButtonStateMask() {
  // @@protoc_insertion_point(destructor:netput.internal.MouseButtonStateMask)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MouseButtonStateMask::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MouseButtonStateMask::Clear() {
// @@protoc_insertion_point(message_clear_start:netput.internal.MouseButtonStateMask)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.left_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.x2_) -
      reinterpret_cast<char*>(&_impl_.left_)) + sizeof(_impl_.x2_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MouseButtonStateMask::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> MouseButtonStateMask::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MouseButtonStateMask_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .netput.internal.MouseState Left = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MouseButtonStateMask, _impl_.left_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MouseButtonStateMask, _impl_.left_)}},
    // .netput.internal.MouseState Middle = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MouseButtonStateMask, _impl_.middle_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MouseButtonStateMask, _impl_.middle_)}},
    // .netput.internal.MouseState Right = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MouseButtonStateMask, _impl_.right_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MouseButtonStateMask, _impl_.right_)}},
    // .netput.internal.MouseState X1 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MouseButtonStateMask, _impl_.x1_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MouseButtonStateMask, _impl_.x1_)}},
    // .netput.internal.MouseState X2 = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MouseButtonStateMask, _impl_.x2_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MouseButtonStateMask, _impl_.x2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .netput.internal.MouseState Left = 1;
    {PROTOBUF_FIELD_OFFSET(MouseButtonStateMask, _impl_.left_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .netput.internal.MouseState Middle = 2;
    {PROTOBUF_FIELD_OFFSET(MouseButtonStateMask, _impl_.middle_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .netput.internal.MouseState Right = 3;
    {PROTOBUF_FIELD_OFFSET(MouseButtonStateMask, _impl_.right_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .netput.internal.MouseState X1 = 4;
    {PROTOBUF_FIELD_OFFSET(MouseButtonStateMask, _impl_.x1_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .netput.internal.MouseState X2 = 5;
    {PROTOBUF_FIELD_OFFSET(MouseButtonStateMask, _impl_.x2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MouseButtonStateMask::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:netput.internal.MouseButtonStateMask)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .netput.internal.MouseState Left = 1;
  if (this->_internal_left() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_left(), target);
  }

  // .netput.internal.MouseState Middle = 2;
  if (this->_internal_middle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_middle(), target);
  }

  // .netput.internal.MouseState Right = 3;
  if (this->_internal_right() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_right(), target);
  }

  // .netput.internal.MouseState X1 = 4;
  if (this->_internal_x1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_x1(), target);
  }

  // .netput.internal.MouseState X2 = 5;
  if (this->_internal_x2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_x2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netput.internal.MouseButtonStateMask)
  return target;
}

::size_t MouseButtonStateMask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netput.internal.MouseButtonStateMask)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .netput.internal.MouseState Left = 1;
  if (this->_internal_left() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_left());
  }

  // .netput.internal.MouseState Middle = 2;
  if (this->_internal_middle() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_middle());
  }

  // .netput.internal.MouseState Right = 3;
  if (this->_internal_right() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_right());
  }

  // .netput.internal.MouseState X1 = 4;
  if (this->_internal_x1() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_x1());
  }

  // .netput.internal.MouseState X2 = 5;
  if (this->_internal_x2() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_x2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MouseButtonStateMask::_class_data_ = {
    MouseButtonStateMask::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MouseButtonStateMask::GetClassData() const {
  return &_class_data_;
}

void MouseButtonStateMask::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MouseButtonStateMask*>(&to_msg);
  auto& from = static_cast<const MouseButtonStateMask&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:netput.internal.MouseButtonStateMask)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_left() != 0) {
    _this->_internal_set_left(from._internal_left());
  }
  if (from._internal_middle() != 0) {
    _this->_internal_set_middle(from._internal_middle());
  }
  if (from._internal_right() != 0) {
    _this->_internal_set_right(from._internal_right());
  }
  if (from._internal_x1() != 0) {
    _this->_internal_set_x1(from._internal_x1());
  }
  if (from._internal_x2() != 0) {
    _this->_internal_set_x2(from._internal_x2());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MouseButtonStateMask::CopyFrom(const MouseButtonStateMask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netput.internal.MouseButtonStateMask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MouseButtonStateMask::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MouseButtonStateMask::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MouseButtonStateMask::InternalSwap(MouseButtonStateMask* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MouseButtonStateMask, _impl_.x2_)
      + sizeof(MouseButtonStateMask::_impl_.x2_)
      - PROTOBUF_FIELD_OFFSET(MouseButtonStateMask, _impl_.left_)>(
          reinterpret_cast<char*>(&_impl_.left_),
          reinterpret_cast<char*>(&other->_impl_.left_));
}

::google::protobuf::Metadata MouseButtonStateMask::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netput_2eproto_getter, &descriptor_table_netput_2eproto_once,
      file_level_metadata_netput_2eproto[4]);
}
// ===================================================================

class MouseMotionEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<MouseMotionEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_._has_bits_);
  static const ::netput::internal::MouseButtonStateMask& statemask(const MouseMotionEvent* msg);
  static void set_has_statemask(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::netput::internal::MouseButtonStateMask& MouseMotionEvent::_Internal::statemask(const MouseMotionEvent* msg) {
  return *msg->_impl_.statemask_;
}
MouseMotionEvent::MouseMotionEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:netput.internal.MouseMotionEvent)
}
inline PROTOBUF_NDEBUG_INLINE MouseMotionEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MouseMotionEvent::MouseMotionEvent(
    ::google::protobuf::Arena* arena,
    const MouseMotionEvent& from)
    : ::google::protobuf::Message(arena) {
  MouseMotionEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.statemask_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::netput::internal::MouseButtonStateMask>(arena, *from._impl_.statemask_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, relativey_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::relativey_));

  // @@protoc_insertion_point(copy_constructor:netput.internal.MouseMotionEvent)
}
inline PROTOBUF_NDEBUG_INLINE MouseMotionEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MouseMotionEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, statemask_),
           0,
           offsetof(Impl_, relativey_) -
               offsetof(Impl_, statemask_) +
               sizeof(Impl_::relativey_));
}
MouseMotionEvent::~MouseMotionEvent() {
  // @@protoc_insertion_point(destructor:netput.internal.MouseMotionEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MouseMotionEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.statemask_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MouseMotionEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:netput.internal.MouseMotionEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.statemask_ != nullptr);
    _impl_.statemask_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.relativey_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.relativey_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MouseMotionEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 0, 2> MouseMotionEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MouseMotionEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 Timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MouseMotionEvent, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.timestamp_)}},
    // uint32 WindowID = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MouseMotionEvent, _impl_.windowid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.windowid_)}},
    // .netput.internal.MouseButtonStateMask StateMask = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.statemask_)}},
    // sint32 X = 4;
    {::_pbi::TcParser::FastZ32S1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.x_)}},
    // sint32 Y = 5;
    {::_pbi::TcParser::FastZ32S1,
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.y_)}},
    // sint32 RelativeX = 6;
    {::_pbi::TcParser::FastZ32S1,
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.relativex_)}},
    // sint32 RelativeY = 7;
    {::_pbi::TcParser::FastZ32S1,
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.relativey_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 Timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 WindowID = 2;
    {PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.windowid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .netput.internal.MouseButtonStateMask StateMask = 3;
    {PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.statemask_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // sint32 X = 4;
    {PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.x_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // sint32 Y = 5;
    {PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.y_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // sint32 RelativeX = 6;
    {PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.relativex_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // sint32 RelativeY = 7;
    {PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.relativey_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::netput::internal::MouseButtonStateMask>()},
  }}, {{
  }},
};

::uint8_t* MouseMotionEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:netput.internal.MouseMotionEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_timestamp(), target);
  }

  // uint32 WindowID = 2;
  if (this->_internal_windowid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_windowid(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .netput.internal.MouseButtonStateMask StateMask = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::statemask(this),
        _Internal::statemask(this).GetCachedSize(), target, stream);
  }

  // sint32 X = 4;
  if (this->_internal_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        4, this->_internal_x(), target);
  }

  // sint32 Y = 5;
  if (this->_internal_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        5, this->_internal_y(), target);
  }

  // sint32 RelativeX = 6;
  if (this->_internal_relativex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        6, this->_internal_relativex(), target);
  }

  // sint32 RelativeY = 7;
  if (this->_internal_relativey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        7, this->_internal_relativey(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netput.internal.MouseMotionEvent)
  return target;
}

::size_t MouseMotionEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netput.internal.MouseMotionEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .netput.internal.MouseButtonStateMask StateMask = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.statemask_);
  }

  // uint64 Timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timestamp());
  }

  // uint32 WindowID = 2;
  if (this->_internal_windowid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_windowid());
  }

  // sint32 X = 4;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_x());
  }

  // sint32 Y = 5;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_y());
  }

  // sint32 RelativeX = 6;
  if (this->_internal_relativex() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_relativex());
  }

  // sint32 RelativeY = 7;
  if (this->_internal_relativey() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_relativey());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MouseMotionEvent::_class_data_ = {
    MouseMotionEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MouseMotionEvent::GetClassData() const {
  return &_class_data_;
}

void MouseMotionEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MouseMotionEvent*>(&to_msg);
  auto& from = static_cast<const MouseMotionEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:netput.internal.MouseMotionEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_statemask()->::netput::internal::MouseButtonStateMask::MergeFrom(
        from._internal_statemask());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_windowid() != 0) {
    _this->_internal_set_windowid(from._internal_windowid());
  }
  if (from._internal_x() != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  if (from._internal_relativex() != 0) {
    _this->_internal_set_relativex(from._internal_relativex());
  }
  if (from._internal_relativey() != 0) {
    _this->_internal_set_relativey(from._internal_relativey());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MouseMotionEvent::CopyFrom(const MouseMotionEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netput.internal.MouseMotionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MouseMotionEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MouseMotionEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MouseMotionEvent::InternalSwap(MouseMotionEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.relativey_)
      + sizeof(MouseMotionEvent::_impl_.relativey_)
      - PROTOBUF_FIELD_OFFSET(MouseMotionEvent, _impl_.statemask_)>(
          reinterpret_cast<char*>(&_impl_.statemask_),
          reinterpret_cast<char*>(&other->_impl_.statemask_));
}

::google::protobuf::Metadata MouseMotionEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netput_2eproto_getter, &descriptor_table_netput_2eproto_once,
      file_level_metadata_netput_2eproto[5]);
}
// ===================================================================

class MouseButtonEvent::_Internal {
 public:
};

MouseButtonEvent::MouseButtonEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:netput.internal.MouseButtonEvent)
}
MouseButtonEvent::MouseButtonEvent(
    ::google::protobuf::Arena* arena, const MouseButtonEvent& from)
    : MouseButtonEvent(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MouseButtonEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MouseButtonEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::y_));
}
MouseButtonEvent::~MouseButtonEvent() {
  // @@protoc_insertion_point(destructor:netput.internal.MouseButtonEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MouseButtonEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MouseButtonEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:netput.internal.MouseButtonEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MouseButtonEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> MouseButtonEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MouseButtonEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 Timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MouseButtonEvent, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.timestamp_)}},
    // uint32 WindowID = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MouseButtonEvent, _impl_.windowid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.windowid_)}},
    // .netput.internal.MouseButton Button = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MouseButtonEvent, _impl_.button_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.button_)}},
    // .netput.internal.MouseState State = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MouseButtonEvent, _impl_.state_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.state_)}},
    // bool DoubleClick = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MouseButtonEvent, _impl_.doubleclick_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.doubleclick_)}},
    // sint32 X = 6;
    {::_pbi::TcParser::FastZ32S1,
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.x_)}},
    // sint32 Y = 7;
    {::_pbi::TcParser::FastZ32S1,
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 Timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 WindowID = 2;
    {PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.windowid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .netput.internal.MouseButton Button = 3;
    {PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.button_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .netput.internal.MouseState State = 4;
    {PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool DoubleClick = 5;
    {PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.doubleclick_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // sint32 X = 6;
    {PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // sint32 Y = 7;
    {PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MouseButtonEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:netput.internal.MouseButtonEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_timestamp(), target);
  }

  // uint32 WindowID = 2;
  if (this->_internal_windowid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_windowid(), target);
  }

  // .netput.internal.MouseButton Button = 3;
  if (this->_internal_button() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_button(), target);
  }

  // .netput.internal.MouseState State = 4;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_state(), target);
  }

  // bool DoubleClick = 5;
  if (this->_internal_doubleclick() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_doubleclick(), target);
  }

  // sint32 X = 6;
  if (this->_internal_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        6, this->_internal_x(), target);
  }

  // sint32 Y = 7;
  if (this->_internal_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        7, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netput.internal.MouseButtonEvent)
  return target;
}

::size_t MouseButtonEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netput.internal.MouseButtonEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timestamp());
  }

  // uint32 WindowID = 2;
  if (this->_internal_windowid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_windowid());
  }

  // .netput.internal.MouseButton Button = 3;
  if (this->_internal_button() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_button());
  }

  // .netput.internal.MouseState State = 4;
  if (this->_internal_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  // bool DoubleClick = 5;
  if (this->_internal_doubleclick() != 0) {
    total_size += 2;
  }

  // sint32 X = 6;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_x());
  }

  // sint32 Y = 7;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_y());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MouseButtonEvent::_class_data_ = {
    MouseButtonEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MouseButtonEvent::GetClassData() const {
  return &_class_data_;
}

void MouseButtonEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MouseButtonEvent*>(&to_msg);
  auto& from = static_cast<const MouseButtonEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:netput.internal.MouseButtonEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_windowid() != 0) {
    _this->_internal_set_windowid(from._internal_windowid());
  }
  if (from._internal_button() != 0) {
    _this->_internal_set_button(from._internal_button());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_doubleclick() != 0) {
    _this->_internal_set_doubleclick(from._internal_doubleclick());
  }
  if (from._internal_x() != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MouseButtonEvent::CopyFrom(const MouseButtonEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netput.internal.MouseButtonEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MouseButtonEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MouseButtonEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MouseButtonEvent::InternalSwap(MouseButtonEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.y_)
      + sizeof(MouseButtonEvent::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(MouseButtonEvent, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata MouseButtonEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netput_2eproto_getter, &descriptor_table_netput_2eproto_once,
      file_level_metadata_netput_2eproto[6]);
}
// ===================================================================

class MouseWheelEvent::_Internal {
 public:
};

MouseWheelEvent::MouseWheelEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:netput.internal.MouseWheelEvent)
}
MouseWheelEvent::MouseWheelEvent(
    ::google::protobuf::Arena* arena, const MouseWheelEvent& from)
    : MouseWheelEvent(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MouseWheelEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MouseWheelEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, precicey_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::precicey_));
}
MouseWheelEvent::~MouseWheelEvent() {
  // @@protoc_insertion_point(destructor:netput.internal.MouseWheelEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MouseWheelEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MouseWheelEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:netput.internal.MouseWheelEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.precicey_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.precicey_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MouseWheelEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> MouseWheelEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MouseWheelEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 Timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MouseWheelEvent, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MouseWheelEvent, _impl_.timestamp_)}},
    // uint32 WindowID = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MouseWheelEvent, _impl_.windowid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MouseWheelEvent, _impl_.windowid_)}},
    // sint32 X = 3;
    {::_pbi::TcParser::FastZ32S1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MouseWheelEvent, _impl_.x_)}},
    // sint32 Y = 4;
    {::_pbi::TcParser::FastZ32S1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MouseWheelEvent, _impl_.y_)}},
    // float PreciseX = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(MouseWheelEvent, _impl_.precisex_)}},
    // float PreciceY = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(MouseWheelEvent, _impl_.precicey_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 Timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(MouseWheelEvent, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 WindowID = 2;
    {PROTOBUF_FIELD_OFFSET(MouseWheelEvent, _impl_.windowid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // sint32 X = 3;
    {PROTOBUF_FIELD_OFFSET(MouseWheelEvent, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // sint32 Y = 4;
    {PROTOBUF_FIELD_OFFSET(MouseWheelEvent, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // float PreciseX = 5;
    {PROTOBUF_FIELD_OFFSET(MouseWheelEvent, _impl_.precisex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float PreciceY = 6;
    {PROTOBUF_FIELD_OFFSET(MouseWheelEvent, _impl_.precicey_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MouseWheelEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:netput.internal.MouseWheelEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_timestamp(), target);
  }

  // uint32 WindowID = 2;
  if (this->_internal_windowid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_windowid(), target);
  }

  // sint32 X = 3;
  if (this->_internal_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        3, this->_internal_x(), target);
  }

  // sint32 Y = 4;
  if (this->_internal_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        4, this->_internal_y(), target);
  }

  // float PreciseX = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_precisex = this->_internal_precisex();
  ::uint32_t raw_precisex;
  memcpy(&raw_precisex, &tmp_precisex, sizeof(tmp_precisex));
  if (raw_precisex != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_precisex(), target);
  }

  // float PreciceY = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_precicey = this->_internal_precicey();
  ::uint32_t raw_precicey;
  memcpy(&raw_precicey, &tmp_precicey, sizeof(tmp_precicey));
  if (raw_precicey != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_precicey(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netput.internal.MouseWheelEvent)
  return target;
}

::size_t MouseWheelEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netput.internal.MouseWheelEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timestamp());
  }

  // uint32 WindowID = 2;
  if (this->_internal_windowid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_windowid());
  }

  // sint32 X = 3;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_x());
  }

  // sint32 Y = 4;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_y());
  }

  // float PreciseX = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_precisex = this->_internal_precisex();
  ::uint32_t raw_precisex;
  memcpy(&raw_precisex, &tmp_precisex, sizeof(tmp_precisex));
  if (raw_precisex != 0) {
    total_size += 5;
  }

  // float PreciceY = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_precicey = this->_internal_precicey();
  ::uint32_t raw_precicey;
  memcpy(&raw_precicey, &tmp_precicey, sizeof(tmp_precicey));
  if (raw_precicey != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MouseWheelEvent::_class_data_ = {
    MouseWheelEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MouseWheelEvent::GetClassData() const {
  return &_class_data_;
}

void MouseWheelEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MouseWheelEvent*>(&to_msg);
  auto& from = static_cast<const MouseWheelEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:netput.internal.MouseWheelEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_windowid() != 0) {
    _this->_internal_set_windowid(from._internal_windowid());
  }
  if (from._internal_x() != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_precisex = from._internal_precisex();
  ::uint32_t raw_precisex;
  memcpy(&raw_precisex, &tmp_precisex, sizeof(tmp_precisex));
  if (raw_precisex != 0) {
    _this->_internal_set_precisex(from._internal_precisex());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_precicey = from._internal_precicey();
  ::uint32_t raw_precicey;
  memcpy(&raw_precicey, &tmp_precicey, sizeof(tmp_precicey));
  if (raw_precicey != 0) {
    _this->_internal_set_precicey(from._internal_precicey());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MouseWheelEvent::CopyFrom(const MouseWheelEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netput.internal.MouseWheelEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MouseWheelEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MouseWheelEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MouseWheelEvent::InternalSwap(MouseWheelEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MouseWheelEvent, _impl_.precicey_)
      + sizeof(MouseWheelEvent::_impl_.precicey_)
      - PROTOBUF_FIELD_OFFSET(MouseWheelEvent, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata MouseWheelEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netput_2eproto_getter, &descriptor_table_netput_2eproto_once,
      file_level_metadata_netput_2eproto[7]);
}
// ===================================================================

class KeyboardEvent::_Internal {
 public:
};

KeyboardEvent::KeyboardEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:netput.internal.KeyboardEvent)
}
KeyboardEvent::KeyboardEvent(
    ::google::protobuf::Arena* arena, const KeyboardEvent& from)
    : KeyboardEvent(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE KeyboardEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void KeyboardEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, keycode_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::keycode_));
}
KeyboardEvent::~KeyboardEvent() {
  // @@protoc_insertion_point(destructor:netput.internal.KeyboardEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void KeyboardEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void KeyboardEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:netput.internal.KeyboardEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.keycode_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.keycode_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* KeyboardEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> KeyboardEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_KeyboardEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 Timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(KeyboardEvent, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(KeyboardEvent, _impl_.timestamp_)}},
    // uint32 WindowID = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(KeyboardEvent, _impl_.windowid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(KeyboardEvent, _impl_.windowid_)}},
    // .netput.internal.KeyState State = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(KeyboardEvent, _impl_.state_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(KeyboardEvent, _impl_.state_)}},
    // bool Repeat = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(KeyboardEvent, _impl_.repeat_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(KeyboardEvent, _impl_.repeat_)}},
    // uint32 KeyCode = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(KeyboardEvent, _impl_.keycode_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(KeyboardEvent, _impl_.keycode_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 Timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(KeyboardEvent, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 WindowID = 2;
    {PROTOBUF_FIELD_OFFSET(KeyboardEvent, _impl_.windowid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .netput.internal.KeyState State = 3;
    {PROTOBUF_FIELD_OFFSET(KeyboardEvent, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool Repeat = 4;
    {PROTOBUF_FIELD_OFFSET(KeyboardEvent, _impl_.repeat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 KeyCode = 5;
    {PROTOBUF_FIELD_OFFSET(KeyboardEvent, _impl_.keycode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* KeyboardEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:netput.internal.KeyboardEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_timestamp(), target);
  }

  // uint32 WindowID = 2;
  if (this->_internal_windowid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_windowid(), target);
  }

  // .netput.internal.KeyState State = 3;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_state(), target);
  }

  // bool Repeat = 4;
  if (this->_internal_repeat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_repeat(), target);
  }

  // uint32 KeyCode = 5;
  if (this->_internal_keycode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_keycode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netput.internal.KeyboardEvent)
  return target;
}

::size_t KeyboardEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netput.internal.KeyboardEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timestamp());
  }

  // uint32 WindowID = 2;
  if (this->_internal_windowid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_windowid());
  }

  // .netput.internal.KeyState State = 3;
  if (this->_internal_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  // bool Repeat = 4;
  if (this->_internal_repeat() != 0) {
    total_size += 2;
  }

  // uint32 KeyCode = 5;
  if (this->_internal_keycode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_keycode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData KeyboardEvent::_class_data_ = {
    KeyboardEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* KeyboardEvent::GetClassData() const {
  return &_class_data_;
}

void KeyboardEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<KeyboardEvent*>(&to_msg);
  auto& from = static_cast<const KeyboardEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:netput.internal.KeyboardEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_windowid() != 0) {
    _this->_internal_set_windowid(from._internal_windowid());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_repeat() != 0) {
    _this->_internal_set_repeat(from._internal_repeat());
  }
  if (from._internal_keycode() != 0) {
    _this->_internal_set_keycode(from._internal_keycode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void KeyboardEvent::CopyFrom(const KeyboardEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netput.internal.KeyboardEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool KeyboardEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* KeyboardEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void KeyboardEvent::InternalSwap(KeyboardEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(KeyboardEvent, _impl_.keycode_)
      + sizeof(KeyboardEvent::_impl_.keycode_)
      - PROTOBUF_FIELD_OFFSET(KeyboardEvent, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata KeyboardEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netput_2eproto_getter, &descriptor_table_netput_2eproto_once,
      file_level_metadata_netput_2eproto[8]);
}
// ===================================================================

class WindowEvent::_Internal {
 public:
};

WindowEvent::WindowEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:netput.internal.WindowEvent)
}
WindowEvent::WindowEvent(
    ::google::protobuf::Arena* arena, const WindowEvent& from)
    : WindowEvent(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE WindowEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WindowEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, arg2_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::arg2_));
}
WindowEvent::~WindowEvent() {
  // @@protoc_insertion_point(destructor:netput.internal.WindowEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WindowEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WindowEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:netput.internal.WindowEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.arg2_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.arg2_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WindowEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> WindowEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WindowEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 Timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WindowEvent, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WindowEvent, _impl_.timestamp_)}},
    // uint32 WindowID = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WindowEvent, _impl_.windowid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WindowEvent, _impl_.windowid_)}},
    // .netput.internal.WindowEventType Type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WindowEvent, _impl_.type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(WindowEvent, _impl_.type_)}},
    // sint32 Arg1 = 4;
    {::_pbi::TcParser::FastZ32S1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(WindowEvent, _impl_.arg1_)}},
    // sint32 Arg2 = 5;
    {::_pbi::TcParser::FastZ32S1,
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(WindowEvent, _impl_.arg2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 Timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(WindowEvent, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 WindowID = 2;
    {PROTOBUF_FIELD_OFFSET(WindowEvent, _impl_.windowid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .netput.internal.WindowEventType Type = 3;
    {PROTOBUF_FIELD_OFFSET(WindowEvent, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // sint32 Arg1 = 4;
    {PROTOBUF_FIELD_OFFSET(WindowEvent, _impl_.arg1_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // sint32 Arg2 = 5;
    {PROTOBUF_FIELD_OFFSET(WindowEvent, _impl_.arg2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* WindowEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:netput.internal.WindowEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_timestamp(), target);
  }

  // uint32 WindowID = 2;
  if (this->_internal_windowid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_windowid(), target);
  }

  // .netput.internal.WindowEventType Type = 3;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_type(), target);
  }

  // sint32 Arg1 = 4;
  if (this->_internal_arg1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        4, this->_internal_arg1(), target);
  }

  // sint32 Arg2 = 5;
  if (this->_internal_arg2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        5, this->_internal_arg2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netput.internal.WindowEvent)
  return target;
}

::size_t WindowEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netput.internal.WindowEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timestamp());
  }

  // uint32 WindowID = 2;
  if (this->_internal_windowid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_windowid());
  }

  // .netput.internal.WindowEventType Type = 3;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // sint32 Arg1 = 4;
  if (this->_internal_arg1() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_arg1());
  }

  // sint32 Arg2 = 5;
  if (this->_internal_arg2() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_arg2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WindowEvent::_class_data_ = {
    WindowEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WindowEvent::GetClassData() const {
  return &_class_data_;
}

void WindowEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WindowEvent*>(&to_msg);
  auto& from = static_cast<const WindowEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:netput.internal.WindowEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_windowid() != 0) {
    _this->_internal_set_windowid(from._internal_windowid());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_arg1() != 0) {
    _this->_internal_set_arg1(from._internal_arg1());
  }
  if (from._internal_arg2() != 0) {
    _this->_internal_set_arg2(from._internal_arg2());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WindowEvent::CopyFrom(const WindowEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netput.internal.WindowEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WindowEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WindowEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WindowEvent::InternalSwap(WindowEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WindowEvent, _impl_.arg2_)
      + sizeof(WindowEvent::_impl_.arg2_)
      - PROTOBUF_FIELD_OFFSET(WindowEvent, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata WindowEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netput_2eproto_getter, &descriptor_table_netput_2eproto_once,
      file_level_metadata_netput_2eproto[9]);
}
// ===================================================================

class EventRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::netput::internal::EventRequest, _impl_._oneof_case_);
  static const ::netput::internal::MouseMotionEvent& mousemotion(const EventRequest* msg);
  static const ::netput::internal::MouseButtonEvent& mousebutton(const EventRequest* msg);
  static const ::netput::internal::MouseWheelEvent& mousewheel(const EventRequest* msg);
  static const ::netput::internal::KeyboardEvent& keyboard(const EventRequest* msg);
  static const ::netput::internal::WindowEvent& window(const EventRequest* msg);
};

const ::netput::internal::MouseMotionEvent& EventRequest::_Internal::mousemotion(const EventRequest* msg) {
  return *msg->_impl_.Event_.mousemotion_;
}
const ::netput::internal::MouseButtonEvent& EventRequest::_Internal::mousebutton(const EventRequest* msg) {
  return *msg->_impl_.Event_.mousebutton_;
}
const ::netput::internal::MouseWheelEvent& EventRequest::_Internal::mousewheel(const EventRequest* msg) {
  return *msg->_impl_.Event_.mousewheel_;
}
const ::netput::internal::KeyboardEvent& EventRequest::_Internal::keyboard(const EventRequest* msg) {
  return *msg->_impl_.Event_.keyboard_;
}
const ::netput::internal::WindowEvent& EventRequest::_Internal::window(const EventRequest* msg) {
  return *msg->_impl_.Event_.window_;
}
void EventRequest::set_allocated_mousemotion(::netput::internal::MouseMotionEvent* mousemotion) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_Event();
  if (mousemotion) {
    ::google::protobuf::Arena* submessage_arena = mousemotion->GetArena();
    if (message_arena != submessage_arena) {
      mousemotion = ::google::protobuf::internal::GetOwnedMessage(message_arena, mousemotion, submessage_arena);
    }
    set_has_mousemotion();
    _impl_.Event_.mousemotion_ = mousemotion;
  }
  // @@protoc_insertion_point(field_set_allocated:netput.internal.EventRequest.MouseMotion)
}
void EventRequest::set_allocated_mousebutton(::netput::internal::MouseButtonEvent* mousebutton) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_Event();
  if (mousebutton) {
    ::google::protobuf::Arena* submessage_arena = mousebutton->GetArena();
    if (message_arena != submessage_arena) {
      mousebutton = ::google::protobuf::internal::GetOwnedMessage(message_arena, mousebutton, submessage_arena);
    }
    set_has_mousebutton();
    _impl_.Event_.mousebutton_ = mousebutton;
  }
  // @@protoc_insertion_point(field_set_allocated:netput.internal.EventRequest.MouseButton)
}
void EventRequest::set_allocated_mousewheel(::netput::internal::MouseWheelEvent* mousewheel) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_Event();
  if (mousewheel) {
    ::google::protobuf::Arena* submessage_arena = mousewheel->GetArena();
    if (message_arena != submessage_arena) {
      mousewheel = ::google::protobuf::internal::GetOwnedMessage(message_arena, mousewheel, submessage_arena);
    }
    set_has_mousewheel();
    _impl_.Event_.mousewheel_ = mousewheel;
  }
  // @@protoc_insertion_point(field_set_allocated:netput.internal.EventRequest.MouseWheel)
}
void EventRequest::set_allocated_keyboard(::netput::internal::KeyboardEvent* keyboard) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_Event();
  if (keyboard) {
    ::google::protobuf::Arena* submessage_arena = keyboard->GetArena();
    if (message_arena != submessage_arena) {
      keyboard = ::google::protobuf::internal::GetOwnedMessage(message_arena, keyboard, submessage_arena);
    }
    set_has_keyboard();
    _impl_.Event_.keyboard_ = keyboard;
  }
  // @@protoc_insertion_point(field_set_allocated:netput.internal.EventRequest.Keyboard)
}
void EventRequest::set_allocated_window(::netput::internal::WindowEvent* window) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_Event();
  if (window) {
    ::google::protobuf::Arena* submessage_arena = window->GetArena();
    if (message_arena != submessage_arena) {
      window = ::google::protobuf::internal::GetOwnedMessage(message_arena, window, submessage_arena);
    }
    set_has_window();
    _impl_.Event_.window_ = window;
  }
  // @@protoc_insertion_point(field_set_allocated:netput.internal.EventRequest.Window)
}
EventRequest::EventRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:netput.internal.EventRequest)
}
inline PROTOBUF_NDEBUG_INLINE EventRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : sessionid_(arena, from.sessionid_),
        Event_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

EventRequest::EventRequest(
    ::google::protobuf::Arena* arena,
    const EventRequest& from)
    : ::google::protobuf::Message(arena) {
  EventRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.type_ = from._impl_.type_;
  switch (Event_case()) {
    case EVENT_NOT_SET:
      break;
      case kMouseMotion:
        _impl_.Event_.mousemotion_ = CreateMaybeMessage<::netput::internal::MouseMotionEvent>(arena, *from._impl_.Event_.mousemotion_);
        break;
      case kMouseButton:
        _impl_.Event_.mousebutton_ = CreateMaybeMessage<::netput::internal::MouseButtonEvent>(arena, *from._impl_.Event_.mousebutton_);
        break;
      case kMouseWheel:
        _impl_.Event_.mousewheel_ = CreateMaybeMessage<::netput::internal::MouseWheelEvent>(arena, *from._impl_.Event_.mousewheel_);
        break;
      case kKeyboard:
        _impl_.Event_.keyboard_ = CreateMaybeMessage<::netput::internal::KeyboardEvent>(arena, *from._impl_.Event_.keyboard_);
        break;
      case kWindow:
        _impl_.Event_.window_ = CreateMaybeMessage<::netput::internal::WindowEvent>(arena, *from._impl_.Event_.window_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:netput.internal.EventRequest)
}
inline PROTOBUF_NDEBUG_INLINE EventRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sessionid_(arena),
        Event_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void EventRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
EventRequest::~EventRequest() {
  // @@protoc_insertion_point(destructor:netput.internal.EventRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EventRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sessionid_.Destroy();
  if (has_Event()) {
    clear_Event();
  }
  _impl_.~Impl_();
}

void EventRequest::clear_Event() {
// @@protoc_insertion_point(one_of_clear_start:netput.internal.EventRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (Event_case()) {
    case kMouseMotion: {
      if (GetArena() == nullptr) {
        delete _impl_.Event_.mousemotion_;
      }
      break;
    }
    case kMouseButton: {
      if (GetArena() == nullptr) {
        delete _impl_.Event_.mousebutton_;
      }
      break;
    }
    case kMouseWheel: {
      if (GetArena() == nullptr) {
        delete _impl_.Event_.mousewheel_;
      }
      break;
    }
    case kKeyboard: {
      if (GetArena() == nullptr) {
        delete _impl_.Event_.keyboard_;
      }
      break;
    }
    case kWindow: {
      if (GetArena() == nullptr) {
        delete _impl_.Event_.window_;
      }
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = EVENT_NOT_SET;
}


PROTOBUF_NOINLINE void EventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:netput.internal.EventRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessionid_.ClearToEmpty();
  _impl_.type_ = 0;
  clear_Event();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EventRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 7, 5, 46, 2> EventRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EventRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .netput.internal.EventType Type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EventRequest, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EventRequest, _impl_.type_)}},
    // string SessionID = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventRequest, _impl_.sessionid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string SessionID = 1;
    {PROTOBUF_FIELD_OFFSET(EventRequest, _impl_.sessionid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .netput.internal.EventType Type = 2;
    {PROTOBUF_FIELD_OFFSET(EventRequest, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .netput.internal.MouseMotionEvent MouseMotion = 3;
    {PROTOBUF_FIELD_OFFSET(EventRequest, _impl_.Event_.mousemotion_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .netput.internal.MouseButtonEvent MouseButton = 4;
    {PROTOBUF_FIELD_OFFSET(EventRequest, _impl_.Event_.mousebutton_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .netput.internal.MouseWheelEvent MouseWheel = 5;
    {PROTOBUF_FIELD_OFFSET(EventRequest, _impl_.Event_.mousewheel_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .netput.internal.KeyboardEvent Keyboard = 6;
    {PROTOBUF_FIELD_OFFSET(EventRequest, _impl_.Event_.keyboard_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .netput.internal.WindowEvent Window = 7;
    {PROTOBUF_FIELD_OFFSET(EventRequest, _impl_.Event_.window_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::netput::internal::MouseMotionEvent>()},
    {::_pbi::TcParser::GetTable<::netput::internal::MouseButtonEvent>()},
    {::_pbi::TcParser::GetTable<::netput::internal::MouseWheelEvent>()},
    {::_pbi::TcParser::GetTable<::netput::internal::KeyboardEvent>()},
    {::_pbi::TcParser::GetTable<::netput::internal::WindowEvent>()},
  }}, {{
    "\34\11\0\0\0\0\0\0"
    "netput.internal.EventRequest"
    "SessionID"
  }},
};

::uint8_t* EventRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:netput.internal.EventRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string SessionID = 1;
  if (!this->_internal_sessionid().empty()) {
    const std::string& _s = this->_internal_sessionid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "netput.internal.EventRequest.SessionID");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .netput.internal.EventType Type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  switch (Event_case()) {
    case kMouseMotion: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::mousemotion(this),
          _Internal::mousemotion(this).GetCachedSize(), target, stream);
      break;
    }
    case kMouseButton: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::mousebutton(this),
          _Internal::mousebutton(this).GetCachedSize(), target, stream);
      break;
    }
    case kMouseWheel: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::mousewheel(this),
          _Internal::mousewheel(this).GetCachedSize(), target, stream);
      break;
    }
    case kKeyboard: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::keyboard(this),
          _Internal::keyboard(this).GetCachedSize(), target, stream);
      break;
    }
    case kWindow: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, _Internal::window(this),
          _Internal::window(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netput.internal.EventRequest)
  return target;
}

::size_t EventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netput.internal.EventRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SessionID = 1;
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sessionid());
  }

  // .netput.internal.EventType Type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  switch (Event_case()) {
    // .netput.internal.MouseMotionEvent MouseMotion = 3;
    case kMouseMotion: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.Event_.mousemotion_);
      break;
    }
    // .netput.internal.MouseButtonEvent MouseButton = 4;
    case kMouseButton: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.Event_.mousebutton_);
      break;
    }
    // .netput.internal.MouseWheelEvent MouseWheel = 5;
    case kMouseWheel: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.Event_.mousewheel_);
      break;
    }
    // .netput.internal.KeyboardEvent Keyboard = 6;
    case kKeyboard: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.Event_.keyboard_);
      break;
    }
    // .netput.internal.WindowEvent Window = 7;
    case kWindow: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.Event_.window_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EventRequest::_class_data_ = {
    EventRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EventRequest::GetClassData() const {
  return &_class_data_;
}

void EventRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EventRequest*>(&to_msg);
  auto& from = static_cast<const EventRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:netput.internal.EventRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sessionid().empty()) {
    _this->_internal_set_sessionid(from._internal_sessionid());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  switch (from.Event_case()) {
    case kMouseMotion: {
      _this->_internal_mutable_mousemotion()->::netput::internal::MouseMotionEvent::MergeFrom(
          from._internal_mousemotion());
      break;
    }
    case kMouseButton: {
      _this->_internal_mutable_mousebutton()->::netput::internal::MouseButtonEvent::MergeFrom(
          from._internal_mousebutton());
      break;
    }
    case kMouseWheel: {
      _this->_internal_mutable_mousewheel()->::netput::internal::MouseWheelEvent::MergeFrom(
          from._internal_mousewheel());
      break;
    }
    case kKeyboard: {
      _this->_internal_mutable_keyboard()->::netput::internal::KeyboardEvent::MergeFrom(
          from._internal_keyboard());
      break;
    }
    case kWindow: {
      _this->_internal_mutable_window()->::netput::internal::WindowEvent::MergeFrom(
          from._internal_window());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventRequest::CopyFrom(const EventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netput.internal.EventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EventRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EventRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EventRequest::InternalSwap(EventRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sessionid_, &other->_impl_.sessionid_, arena);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_.Event_, other->_impl_.Event_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata EventRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netput_2eproto_getter, &descriptor_table_netput_2eproto_once,
      file_level_metadata_netput_2eproto[10]);
}
// ===================================================================

class EventResponse::_Internal {
 public:
};

EventResponse::EventResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:netput.internal.EventResponse)
}
inline PROTOBUF_NDEBUG_INLINE EventResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : error_(arena, from.error_),
        _cached_size_{0} {}

EventResponse::EventResponse(
    ::google::protobuf::Arena* arena,
    const EventResponse& from)
    : ::google::protobuf::Message(arena) {
  EventResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:netput.internal.EventResponse)
}
inline PROTOBUF_NDEBUG_INLINE EventResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_(arena),
        _cached_size_{0} {}

inline void EventResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
EventResponse::~EventResponse() {
  // @@protoc_insertion_point(destructor:netput.internal.EventResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EventResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.error_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:netput.internal.EventResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EventResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> EventResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EventResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string Error = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.error_)}},
    // bool Success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EventResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool Success = 1;
    {PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string Error = 2;
    {PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.error_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\0\5\0\0\0\0\0"
    "netput.internal.EventResponse"
    "Error"
  }},
};

::uint8_t* EventResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:netput.internal.EventResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool Success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  // string Error = 2;
  if (!this->_internal_error().empty()) {
    const std::string& _s = this->_internal_error();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "netput.internal.EventResponse.Error");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netput.internal.EventResponse)
  return target;
}

::size_t EventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:netput.internal.EventResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Error = 2;
  if (!this->_internal_error().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_error());
  }

  // bool Success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EventResponse::_class_data_ = {
    EventResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EventResponse::GetClassData() const {
  return &_class_data_;
}

void EventResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EventResponse*>(&to_msg);
  auto& from = static_cast<const EventResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:netput.internal.EventResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error().empty()) {
    _this->_internal_set_error(from._internal_error());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventResponse::CopyFrom(const EventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:netput.internal.EventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EventResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EventResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EventResponse::InternalSwap(EventResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata EventResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_netput_2eproto_getter, &descriptor_table_netput_2eproto_once,
      file_level_metadata_netput_2eproto[11]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace internal
}  // namespace netput
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
