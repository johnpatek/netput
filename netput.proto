syntax = "proto3";

package netput.internal;

service Netput {
    rpc Connect(ConnectRequest) returns (ConnectResponse) {}
    rpc Disconnect(DisconnectRequest) returns (DisconnectResponse) {}
    rpc Event(EventRequest) returns (EventResponse) {}
}

message ConnectRequest {
    bytes UserData = 1;
}

message ConnectResponse {
    string SessionID = 2;
}

message DisconnectRequest {
    string SessionID = 1;
}

message DisconnectResponse {
}

enum EventType {
    MouseMotionType = 0;
    MouseButtonType = 1;
    MouseWheelType = 2;
    KeyboardType = 3;
    WindowType = 4;
}

enum KeyState {
    Up = 0;
    Down = 1;
}

enum MouseButton {
    Left = 0;
    Middle = 1;
    Right = 2;
    X1 = 3;
    X2 = 4;
}

enum MouseState {
    Press = 0;
    Release = 1;
}

message MouseButtonStateMask {
    MouseState Left = 1;
    MouseState Middle = 2;
    MouseState Right = 3;
    MouseState X1 = 4;
    MouseState X2 = 5;
}

message MouseMotionEvent {
    uint64 Timestamp = 1;
    uint32 WindowID = 2;
    MouseButtonStateMask StateMask = 3;
    sint32 X = 4;
    sint32 Y = 5;
    sint32 RelativeX = 6;
    sint32 RelativeY = 7;
}

message MouseButtonEvent {
    uint64 Timestamp = 1;
    uint32 WindowID = 2;
    MouseButton Button = 3;
    MouseState State = 4;
    bool DoubleClick = 5;
    sint32 X = 6;
    sint32 Y = 7;
}

message MouseWheelEvent {
    uint64 Timestamp = 1;
    uint32 WindowID = 2;
    sint32 X = 3;
    sint32 Y = 4;
    float PreciseX = 5;
    float PreciceY = 6;
}

message KeyboardEvent {
    uint64 Timestamp = 1;
    uint32 WindowID = 2;
    KeyState State = 3;
    bool Repeat = 4;
    uint32 KeyCode = 5;
}

enum WindowEventType {
    ShownType = 0;
    HiddenType = 1;
    ExposedType = 2;
    MovedType = 3;
    ResizedType = 4;
    MinimizedType = 5;
    MaximizedType = 6;
    RestoredType = 7;
    MouseEnterType = 8;
    MouseLeaveType = 9;
    FocusGainedType = 10;
    FocusLostType = 11;
}

message WindowEvent {
    uint64 Timestamp = 1;
    uint32 WindowID = 2;
    WindowEventType Type = 3;
    sint32 Arg1 = 4;
    sint32 Arg2 = 5;
}

message EventRequest {
    string SessionID = 1;
    EventType Type = 2;
    oneof Event {
        MouseMotionEvent MouseMotion = 3;
        MouseButtonEvent MouseButton = 4;
        MouseWheelEvent MouseWheel = 5;
        KeyboardEvent Keyboard = 6;
        WindowEvent Window = 7;
    }
}

message EventResponse {
}